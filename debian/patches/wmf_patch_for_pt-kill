Description: fix busy_time command line option
Queries which been in the *Execute* state were not killed by pt-kill 
even the busy-time parameter was used. This patch fixes that. 
Index: wmf-pt-kill_3.1.0/bin/wmf-pt-kill
===================================================================
--- wmf-pt-kill_3.1.0.orig/bin/wmf-pt-kill
+++ wmf-pt-kill_3.1.0/bin/wmf-pt-kill
@@ -1,5 +1,7 @@
 #!/usr/bin/env perl
 
+### wmf-pt-kill ###
+# Patched version of wmf-pt-kill for Wikimedia Foundation (https://phabricator.wikimedia.org/T183983#3983899)
 # This program is part of Percona Toolkit: http://www.percona.com/software/
 # See "COPYRIGHT, LICENSE, AND WARRANTY" at the end of this file for legal
 # notices and disclaimers.
@@ -3549,7 +3551,7 @@ sub find {
          next QUERY;
       }
 
-      if ( $find_spec{busy_time} && exists($self->{kill_busy_commands}->{$query->{Command} || ''}) ) {
+      if ( $find_spec{busy_time} && ($query->{Command} || '') ne 'Sleep' ) {
          next QUERY unless defined($query->{Time});
          if ( $query->{Time} < $find_spec{busy_time} ) {
             PTDEBUG && _d("Query isn't running long enough");
@@ -6856,7 +6858,7 @@ sub main {
       PTDEBUG && _d('Creating sentinel file', $sentinel);
       open my $fh, '>', $sentinel
          or die "Cannot open $sentinel: $OS_ERROR\n";
-      print $fh "Remove this file to permit pt-kill to run.\n"
+      print $fh "Remove this file to permit wmf-pt-kill to run.\n"
          or die "Cannot write to $sentinel: $OS_ERROR\n";
       close $fh
          or die "Cannot close $sentinel: $OS_ERROR\n";
@@ -7493,37 +7495,38 @@ if ( !caller ) { exit main(@ARGV); }
 
 =head1 NAME
 
-pt-kill - Kill MySQL queries that match certain criteria.
+wmf-pt-kill - Kill MySQL queries that match certain criteria.
 
 =head1 SYNOPSIS
 
-Usage: pt-kill [OPTIONS] [DSN]
+Usage: wmf-pt-kill [OPTIONS] [DSN]
 
-pt-kill kills MySQL connections.  pt-kill connects to MySQL and gets queries
+Patched version of pt-kill for Wikimedia Foundation (https://phabricator.wikimedia.org/T183983#3983899)
+wmf-pt-kill kills MySQL connections.  pt-kill connects to MySQL and gets queries
 from SHOW PROCESSLIST if no FILE is given.  Else, it reads queries from one
 or more FILE which contains the output of SHOW PROCESSLIST.  If FILE is -,
-pt-kill reads from STDIN.
+wmf-pt-kill reads from STDIN.
 
 Kill queries running longer than 60s:
 
-  pt-kill --busy-time 60 --kill
+  wmf-pt-kill --busy-time 60 --kill
 
 Print, do not kill, queries running longer than 60s:
 
-  pt-kill --busy-time 60 --print
+  wmf-pt-kill --busy-time 60 --print
 
 Check for sleeping processes and kill them all every 10s:
 
-  pt-kill --match-command Sleep --kill --victims all --interval 10
+  wmf-pt-kill --match-command Sleep --kill --victims all --interval 10
 
 Print all login processes:
 
-  pt-kill --match-state login --print --victims all
+  wmf-pt-kill --match-state login --print --victims all
 
 See which queries in the processlist right now would match:
 
    mysql -e "SHOW PROCESSLIST" > proclist.txt
-   pt-kill --test-matching proclist.txt --busy-time 60 --print
+   wmf-pt-kill --test-matching proclist.txt --busy-time 60 --print
 
 =head1 RISKS
 
@@ -7545,7 +7548,7 @@ server.  Before using this tool, please:
 
 =head1 DESCRIPTION
 
-pt-kill captures queries from SHOW PROCESSLIST, filters them, and then either
+wmf-pt-kill captures queries from SHOW PROCESSLIST, filters them, and then either
 kills or prints them.  This is also known as a "slow query sniper" in some
 circles.  The idea is to watch for queries that might be consuming too many
 resources, and kill them.
@@ -7553,12 +7556,12 @@ resources, and kill them.
 For brevity, we talk about killing queries, but they may just be printed
 (or some other future action) depending on what options are given.
 
-Normally pt-kill connects to MySQL to get queries from SHOW PROCESSLIST.
+Normally wmf-pt-kill connects to MySQL to get queries from SHOW PROCESSLIST.
 Alternatively, it can read SHOW PROCESSLIST output from files.  In this case,
-pt-kill does not connect to MySQL and L<"--kill"> has no effect.  You should
+wmf-pt-kill does not connect to MySQL and L<"--kill"> has no effect.  You should
 use L<"--print"> instead when reading files.  The ability to read a file
 with L<"--test-matching"> allows you to capture SHOW PROCESSLIST and test it
-later with pt-kill to make sure that your matches kill the proper queries.
+later with wmf-pt-kill to make sure that your matches kill the proper queries.
 There are a lot of special rules to follow, such as "don't kill replication
 threads," so be careful not to kill something important!
 
@@ -7605,7 +7608,7 @@ from all classes.  The C<Actions> option
 taken.  At this step, there are no more classes, just a single list of
 queries to kill, print, etc.
 
-pt-kill will kill all the queries matching ANY of the specified criteria (logical OR).
+wmf-pt-kill will kill all the queries matching ANY of the specified criteria (logical OR).
 For example, using:
 
   --busy-time 114 --match-command 'Query|Execute'
@@ -7632,7 +7635,7 @@ If both L<"--kill"> and L<"--print"> are
 killed and a line for each like the one above is printed.
 
 Any command executed by L<"--execute-command"> is responsible for its own
-output and logging.  After being executed, pt-kill has no control or interaction
+output and logging.  After being executed, wmf-pt-kill has no control or interaction
 with the command.
 
 =head1 OPTIONS
@@ -7703,7 +7706,7 @@ Discard events for which this Perl code
 
 This option is a string of Perl code or a file containing Perl code that gets
 compiled into a subroutine with one argument: $event.  This is a hashref.
-If the given value is a readable file, then pt-kill reads the entire
+If the given value is a readable file, then wmf-pt-kill reads the entire
 file and uses its contents as the code.  The file should not contain
 a shebang (#!/usr/bin/perl) line.
 
@@ -7730,10 +7733,10 @@ filter.txt:
 
 Then specify C<--filter filter.txt> to read the code from filter.txt.
 
-If the filter code won't compile, pt-kill will die with an error.
+If the filter code won't compile, wmf-pt-kill will die with an error.
 If the filter code does compile, an error may still occur at runtime if the
 code tries to do something wrong (like pattern match an undefined value).
-pt-kill does not provide any safeguards so code carefully!
+wmf-pt-kill does not provide any safeguards so code carefully!
 
 It is permissible for the code to have side effects (to alter C<$event>).
 
@@ -7797,7 +7800,7 @@ Store each query killed in this DSN.
 The argument specifies a table to store all killed queries.  The DSN
 passed in must have the databse (D) and table (t) options. The
 table must have at least the following columns.  You can add more columns for
-your own special purposes, but they won't be used by pt-kill.  The
+your own special purposes, but they won't be used by wmf-pt-kill.  The
 following CREATE TABLE definition is also used for L<"--create-log-table">.
 MAGIC_create_log_table:
 
@@ -7858,7 +7861,7 @@ See pt-query-digest for more information
 
 =item --rds
 
-Denotes the instance in question is on Amazon RDS. By default pt-kill runs
+Denotes the instance in question is on Amazon RDS. By default wmf-pt-kill runs
 the MySQL command "kill" for L<"--kill"> and "kill query" L<"--kill-query">.
 On RDS these two commands are not available and are replaced by function calls.
 This option modifies L<"--kill"> to use "CALL mysql.rds_kill(thread-id)" instead
@@ -7868,19 +7871,19 @@ and L<"--kill-query"> to use "CALL mysql
 
 type: time
 
-How long to run before exiting.  By default pt-kill runs forever, or until
+How long to run before exiting.  By default wmf-pt-kill runs forever, or until
 its process is killed or stopped by the creation of a L<"--sentinel"> file.
-If this option is specified, pt-kill runs for the specified amount of time
+If this option is specified, wmf-pt-kill runs for the specified amount of time
 and sleeps L<"--interval"> seconds between each check of the PROCESSLIST.
 
 =item --sentinel
 
-type: string; default: /tmp/pt-kill-sentinel
+type: string; default: /tmp/wmf-pt-kill-sentinel
 
 Exit if this file exists.
 
 The presence of the file specified by L<"--sentinel"> will cause all
-running instances of pt-kill to exit.  You might find this handy to stop cron
+running instances of wmf-pt-kill to exit.  You might find this handy to stop cron
 jobs gracefully if necessary.  See also L<"--stop">.
 
 =item --slave-user
@@ -7927,7 +7930,7 @@ Socket file to use for connection.
 
 Stop running instances by creating the L<"--sentinel"> file.
 
-Causes pt-kill to create the sentinel file specified by L<"--sentinel"> and
+Causes wmf-pt-kill to create the sentinel file specified by L<"--sentinel"> and
 exit.  This should have the effect of stopping all running instances which are
 watching the same sentinel file.
 
@@ -8089,7 +8092,7 @@ See L<"--match-info">.
 
 default: yes; group: Query Matches
 
-Don't kill pt-kill's own connection.
+Don't kill wmf-pt-kill's own connection.
 
 =item --ignore-state
 
@@ -8285,7 +8288,7 @@ These actions are taken for every matchi
 The actions are taken in this order: L<"--print">, L<"--execute-command">,
 L<"--kill">/L<"--kill-query">.  This order allows L<"--execute-command">
 to see the output of L<"--print"> and the query before
-L<"--kill">/L<"--kill-query">.  This may be helpful because pt-kill does
+L<"--kill">/L<"--kill-query">.  This may be helpful because wmf-pt-kill does
 not pass any information to L<"--execute-command">.
 
 See also L<"GROUP, MATCH AND KILL">.
@@ -8298,10 +8301,10 @@ type: string; group: Actions
 
 Execute this command when a query matches.
 
-After the command is executed, pt-kill has no control over it, so the command
+After the command is executed, wmf-pt-kill has no control over it, so the command
 is responsible for its own info gathering, logging, interval, etc.  The
 command is executed each time a query matches, so be careful that the command
-behaves well when multiple instances are ran.  No information from pt-kill is
+behaves well when multiple instances are ran.  No information from wmf-pt-kill is
 passed to the command.
 
 See also L<"--wait-before-kill">.
@@ -8312,12 +8315,12 @@ group: Actions
 
 Kill the connection for matching queries.
 
-This option makes pt-kill kill the connections (a.k.a. processes, threads) that
+This option makes wmf-pt-kill kill the connections (a.k.a. processes, threads) that
 have matching queries.  Use L<"--kill-query"> if you only want to kill
 individual queries and not their connections.
 
 Unless L<"--print"> is also given, no other information is printed that shows
-that pt-kill matched and killed a query.
+that wmf-pt-kill matched and killed a query.
 
 See also L<"--wait-before-kill"> and L<"--wait-after-kill">.
 
@@ -8342,7 +8345,7 @@ group: Actions
 
 Kill matching queries.
 
-This option makes pt-kill kill matching queries.  This requires MySQL 5.0 or
+This option makes wmf-pt-kill kill matching queries.  This requires MySQL 5.0 or
 newer.  Unlike L<"--kill"> which kills the connection for matching queries,
 this option only kills the query, not its connection.
 
@@ -8428,7 +8431,7 @@ Table to log actions in, if passed throu
 The environment variable C<PTDEBUG> enables verbose debugging output to STDERR.
 To enable debugging and capture all output to a file, run the tool like:
 
-   PTDEBUG=1 pt-kill ... > FILE 2>&1
+   PTDEBUG=1 wmf-pt-kill ... > FILE 2>&1
 
 Be careful: debugging output is voluminous and can generate several megabytes
 of output.
@@ -8440,7 +8443,7 @@ installed in any reasonably new version
 
 =head1 BUGS
 
-For a list of known bugs, see L<http://www.percona.com/bugs/pt-kill>.
+For a complete history of why this was patched, see https://phabricator.wikimedia.org/T183983#3983838
 
 Please report bugs at L<https://jira.percona.com/projects/PT>.
 Include the following information in your bug report:
@@ -8514,6 +8517,6 @@ Place, Suite 330, Boston, MA  02111-1307
 
 =head1 VERSION
 
-pt-kill 3.1.0
+wmf-pt-kill 3.1.0
 
 =cut
